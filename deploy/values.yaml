---
additionalPrometheusRulesMap:
  example-rules:
    groups:
      - name: example.rules
        rules:
          - alert: FireOnTeamLabel
            annotations:
              description: |
                The pod {{$labels.pod}} has label team={{$labels.team}}
              summary: Pod has a team label
            expr: |
              kube_pod_labels{label_team!=""} > 0
            for: 1m
            labels:
              severity: warning

alertmanager:
  # Alertmanager configuration.
  config:
    # Below begins the "raw" alertmanager config as you would put it into
    # alertmanager.yaml. This is more or less the default configuration that
    # comes with kube-prometheus-operator but with some adjustments for the
    # demo. The relevant configuration parts are commented.
    global:
      resolve_timeout: 5m
      # Replaced by helm with the key from the VICTOROPS_API_KEY env
      # variable.
      victorops_api_key: REPLACEME
    receivers:
      - name: dev-null
      - name: victorops
        victorops_configs:
          # This is the core idea: instead of using a hardcoded routing key,
          # make it dynamic by using a template which is evaluated for each
          # alert.
          - routing_key: '{{ template "victorops.routing_key" . }}'
    route:
      # Alerts are grouped by team so that we can extract it
      # from the common alert labels to build the victorops
      # routing key.
      group_by:
        - alertname
        - job
        - team
        - label_team
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: victorops
      # receiver: dev-null
      routes: []

  # Alertmanager template files.
  templateFiles:
    # The victorops.routing_key template will build the routing key based on
    # the presence of the team label and falls back to a "catchall" routing key
    # in situations where there is no team label sent.
    alertmanager.tpl: |-
      {{ define "victorops.routing_key" -}}
      {{- if .CommonLabels.team -}}
      {{- .CommonLabels.team -}}
      {{- else -}}
      {{- if .CommonLabels.label_team -}}
      {{- .CommonLabels.label_team -}}
      {{- else -}}
      catchall
      {{- end -}}
      {{- end -}}
      {{- end }}

## IGNORE CONFIG BELOW
#
# We are going to disable a couple of thing for this demo because we do not
# need them.
global:
  rbac:
    pspEnabled: false
kubelet:
  enabled: false
kubeControllerManager:
  enabled: false
coreDns:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false
nodeExporter:
  enabled: false
defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: false
    general: false
    k8s: true
    kubeApiserver: false
    kubeApiserverAvailability: false
    kubeApiserverError: false
    kubeApiserverSlos: false
    kubelet: false
    kubePrometheusGeneral: true
    kubePrometheusNodeAlerting: false
    kubePrometheusNodeRecording: false
    kubernetesAbsent: true
    kubernetesApps: true
    kubernetesResources: false
    kubernetesStorage: false
    kubernetesSystem: false
    kubeScheduler: false
    kubeStateMetrics: false
    network: false
    node: true
    prometheus: true
    prometheusOperator: true
    time: false
